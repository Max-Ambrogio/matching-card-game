{"version":3,"file":"matchCard.js","names":["MatchingCardGame","selector","btn","gameEl","querySelector","addEventListener","startGame","cardsChosen","cardsChosenId","gameArea","flipCard","deck","Deck","grid","document","console","log","cards","cardArray","i","GAME_BOARD_SIZE","card","getNextCard","cardData","createElement","setAttribute","append","getCardElement","push","evt","tgt","target","slotId","parseInt","parentElement","dataset","slot","cardId","value","cardEvent","CustomEvent","cardDiv","dispatchEvent","length","checkMatch","setup","slotOne","slotTwo","cardOne","cardTwo","alert","Game"],"sources":["matchCard.js"],"sourcesContent":["class MatchingCardGame extends Game {\r\n\r\n    static GAME_BOARD_SIZE = 12\r\n\r\n    constructor(selector){\r\n        super(selector)\r\n        this.setup()\r\n    }\r\n\r\n    setup = () => {\r\n        const btn = this.gameEl.querySelector('.start')\r\n        btn.addEventListener('click',this.startGame)\r\n        this.cardsChosen = []\r\n        this.cardsChosenId = []\r\n\r\n        // this.gameArea.addEventListener('click' , function(evt){\r\n        //     // console.log('game-area clicked')\r\n        //     // console.log('target', evt.target)\r\n        //     //console.log('current target', evt.currentTarget)  \r\n        //     const tgt = evt.target\r\n        //     const slotId = tgt.parentElement.dataset.slot\r\n        //     console.log('slot id', slotId)\r\n        // })\r\n        this.gameArea.addEventListener('click' , this.flipCard)\r\n\r\n    }\r\n   \r\n    //run create deck function 12 times but from the same array.\r\n    //wrapper on cards = data-slot=\"1\"\r\n    //set data attribute \r\n    //create div to assign the data slot to \r\n    //array = gameboard size draw card appends to the grid\r\n    //update display cards loops through grid to append to dom\r\n    startGame = () => {\r\n        const deck = new Deck()\r\n        this.grid = document.querySelector('.game-area')\r\n        console.log(deck.cards)\r\n        this.cardArray = []\r\n        \r\n        for(let i = 0; i < MatchingCardGame.GAME_BOARD_SIZE; i++){\r\n            const card = deck.getNextCard()\r\n            const cardData = document.createElement('div')\r\n            cardData.setAttribute(\"data-slot\", i)\r\n            cardData.append(card.getCardElement())\r\n            this.cardArray.push(card)\r\n            this.grid.append(cardData)\r\n            \r\n        }\r\n        console.log(this.cardArray)\r\n    }\r\n\r\n    //add custom event that checks if card has been flipped over\r\n    // position in the grid [0-11] if [1 === 3] draw and replace cards\r\n    flipCard = (evt) => {\r\n        \r\n        const tgt = evt.target\r\n        const slotId = parseInt(tgt.parentElement.dataset.slot)\r\n        console.log('slot id', slotId)\r\n        \r\n        const cardId = tgt.dataset.value\r\n        // const cardLoc = tgt.getAttribute('data-slot')\r\n        console.log(cardId)\r\n\r\n        const card = this.cardArray[slotId]\r\n\r\n        // console.log(cardLoc)\r\n        const cardEvent = new CustomEvent('flip')\r\n        //toggle class on the dom to show flipped\r\n        const cardDiv = this.grid.querySelector(`[data-slot=\"${slotId}\"]`)\r\n        cardDiv.dispatchEvent(cardEvent)\r\n\r\n        // this.cardArray\r\n        this.cardsChosen.push(slotId)\r\n        // cardsChosenId.push(cardId)\r\n        if (this.cardsChosen.length === 2){\r\n            this.checkMatch()\r\n        }\r\n\r\n        //if match = empty div slots add new \r\n        //if not then flip back over\r\n    }\r\n\r\n    //add function that checks if face card / # matches\r\n    //slot ids\r\n    checkMatch(){\r\n\r\n        const slotOne = this.cardsChosen[0]\r\n        const slotTwo = this.cardsChosen[1]\r\n\r\n        const cardOne = this.cardArray[slotOne]\r\n        const cardTwo = this.cardArray[slotTwo]\r\n\r\n        console.log(cardOne)\r\n        console.log(cardTwo)\r\n    \r\n\r\n        if(cardOne.value === cardTwo.value){\r\n            alert('you got a match')\r\n        } else {\r\n            alert('no match')\r\n        }\r\n\r\n        //reset cards chosen\r\n        //refresh()\r\n    }\r\n\r\n\r\n\r\n\r\n    //add function that updates the score and cards remaing in the scoreboard\r\n    updateScore(){\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    //if all cards have been matched create a congratulations message and a reset button\r\n    gameCompleted(){\r\n\r\n    }\r\n\r\n\r\n}"],"mappings":"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"}